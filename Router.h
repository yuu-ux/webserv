// nginx のパスと一致させてレスポンスを返したりする
#include "HttpParser.h"

class Router {
    public:
        HttpResponse route(const HttpRequest& request) const;
};
// ┌──────────────────────────────┐
// │            Server             │
// │──────────────────────────────│
// │ ・listen(), accept()          │
// │ ・ポート/host単位で待受       │
// │ ・新規接続を ClientHandler に渡す│
// └────────────┬─────────────────┘
//              │
//              ▼
// ┌──────────────────────────────┐
// │        ClientHandler          │
// │──────────────────────────────│
// │ ・接続ごとのFD・状態管理       │
// │ ・read()/write() イベント対応   │
// │ ・HttpParserにデータを渡す     │
// │ ・Routerを呼び出してレス生成   │
// │ ・Keep-Alive / Close判定        │
// └────────────┬─────────────────┘
//              │
//              ▼
// ┌──────────────────────────────┐
// │          HttpParser           │
// │──────────────────────────────│
// │ ・受信バイト列を解析          │
// │ ・メソッド、パス、ヘッダ抽出   │
// │ ・ボディ読み込み（Content-LengthやChunked）│
// │ ・HttpRequestを生成            │
// └────────────┬─────────────────┘
//              │
//              ▼
// ┌──────────────────────────────┐
// │           Router              │
// │──────────────────────────────│
// │ ・ConfigとURIの照合            │
// │ ・マッチするlocation判定       │
// │ ・許可メソッド確認（GET/POST等）│
// │ ・静的/CGI/エラーを振り分け   │
// └────────────┬─────────────────┘
//              │
//              ▼
// ┌──────────────────────────────┐
// │         HttpResponse          │
// │──────────────────────────────│
// │ ・ステータスライン生成         │
// │ ・ヘッダとボディ整形           │
// │ ・toString() で送信可能形式へ │
// └────────────┬─────────────────┘
//              │
//              ▼
// ┌──────────────────────────────┐
// │        ClientHandler          │
// │──────────────────────────────│
// │ ・write() でレスポンス送信     │
// │ ・送信完了 → 次リクエスト待機 or close│
// └──────────────────────────────┘
